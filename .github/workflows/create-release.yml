name: Create Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version-bump:
        description: "Specify the version part to bump (major, minor, or patch)."
        required: false
        default: "patch"
        type: choice
        options:
          - major
          - minor
          - patch
      prerelease-flag:
        description: "Mark the release as a pre-release."
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Fetch all tags
        run: git fetch --tags

      - name: Get latest version and determine new version
        id: versioning
        run: |
          LATEST_VERSION=$(git tag --sort=v:refname | tail -n 1)
          if [ -z "$LATEST_VERSION" ]; then
            LATEST_VERSION="0.0.0"
          fi

          MAJOR=0
          MINOR=0
          PATCH=0

          if [[ $LATEST_VERSION =~ ^([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            MAJOR=${BASH_REMATCH[1]}
            MINOR=${BASH_REMATCH[2]}
            PATCH=${BASH_REMATCH[3]}
          fi

          BUMP_TYPE="${{ github.event.inputs.version-bump || 'patch' }}"

          if [ "$BUMP_TYPE" == "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$BUMP_TYPE" == "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"

          echo "Bumping version from $LATEST_VERSION to $NEW_VERSION"

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

          IS_PRERELEASE="false"
          if [[ "${{ github.event.inputs.prerelease-flag }}" == "true" || $MAJOR -eq 0 && $MINOR -eq 0 ]]; then
            IS_PRERELEASE="true"
          fi
          echo "is_prerelease=$IS_PRERELEASE" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          NEW_VERSION=${{ steps.versioning.outputs.new_version }}
          git tag $NEW_VERSION
          git push origin $NEW_VERSION

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.versioning.outputs.new_version }}
          release_name: Release ${{ steps.versioning.outputs.new_version }}
          body: |
            # Release ${{ steps.versioning.outputs.new_version }}

            This is an automatic release created by GitHub Actions.
          draft: false
          prerelease: ${{ steps.versioning.outputs.is_prerelease }}
